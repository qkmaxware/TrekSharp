<Popup @ref="popup">
    <div class="w3-panel typeface">
        Characters who have done excellent work are subject to promotions in order to move up the ranks in the hierarchy. Select from the list below one of the ranks ahead of the character's current rank. 
    </div>
    <div class="w3-padding">
        @foreach (var rank in ranks) {
            if (Character?.Rank == null || rank.Order > Character.Rank.Order) {
            var capture = rank;
            <button style="width: 100%; font-size:medium;" class="@(capture == nextRank ? "secondary" : "primary")" @onclick=@(() => nextRank = capture)>
                @capture.Title
            </button>
            }
        }
    </div>
    <div class="w3-row">
        <div class="w3-col s6 w3-left-align">
            <button class="w3-red" @onclick=@(() => Close())>
                Cancel
            </button>
        </div>
        <div class="w3-col s6 w3-right-align">
            <button class="w3-green" @onclick=@(() => Save())>
                Promote
            </button>
        </div>
    </div>
</Popup>

@code {
    Popup popup;
    private PlayerCharacter Character {get; set;}
    [Parameter] public Action OnSave {get; set;}

    private IEnumerable<Rank> ranks {
        get {
            yield return Rank.Cadet;
            yield return Rank.Ensign;
            yield return Rank.LieutenantJuniorGrade;
            yield return Rank.Lieutenant;
            yield return Rank.LieutenantCommander;
            yield return Rank.Commander;
            yield return Rank.Captain;
            yield return Rank.Commodore;
            yield return Rank.RearAdmiral; 
            yield return Rank.ViceAdmiral;
            yield return Rank.Admiral;
            yield return Rank.FleetAdmiral;
        }
    }
    private Rank nextRank = null;

    public void Open(PlayerCharacter character) {
        this.Character = character;
        popup.Open();
        StateHasChanged();
    }

    public void Close() {
        popup.Close();
        StateHasChanged();
    }

    private void Save() {
        if (Character != null && nextRank != null) {
            Character.Rank = nextRank;
            Close();
            OnSave?.Invoke();
        }
    }
}