@inherits AppComponentBase

<PopoutTab Name="Modify" TabPosition=80>
    <div class="lcars">
        <div class="typeface text-secondary w3-border-bottom w3-large">
            <b>Experience</b>
        </div>
        <div class="w3-bar-block w3-padding">
            <button class="w3-bar-item w3-margin-bottom" style="font-size: medium;" @onclick=AddMilestone>+ Milestone</button>
        </div>
        <div class="typeface text-secondary w3-border-bottom w3-large">
            <b>Other</b>
        </div>
        <div class="w3-bar-block w3-padding">
            <button class="w3-bar-item w3-margin-bottom" style="font-size: medium;" @onclick="Export">Export Json</button>
            <button class="w3-bar-item w3-margin-bottom w3-red" style="font-size: medium;" @onclick="confirmDelete">Delete</button>
        </div>
    </div>
</PopoutTab>

<MilestoneVesselEditor @ref=milestones OnSave=changesMade></MilestoneVesselEditor>

<ConfirmationDialog @ref="confirm">
</ConfirmationDialog>

@code {
    [Parameter] public Vessel Ship {get; set;}
    public bool HasVessel => Ship != null;
    public bool HasShip => Ship != null;
    [Parameter] public Action OnChange {get; set;}
    [Parameter] public Action<Vessel> OnDelete {get; set;}

    private void changesMade() {
        OnChange?.Invoke();
    }

    private MilestoneVesselEditor milestones;

    private void AddMilestone() {
        if (this.HasVessel)
            milestones.Open(this.Ship);
    }

    ConfirmationDialog confirm;
    private void confirmDelete() {
        confirm.Open($"Are you sure you want to delete the ship '{this.Ship.Name}'?", () => Delete());
    }

    public void Delete() {
        if (HasShip) {
            OnDelete?.Invoke(this.Ship);
        }
    }

    public async Task Export() {
        if (HasShip) {
            var ship = this.Ship;
            await this.DownloadJson($"{ship.Name}.vessel", ship);
        }
    }
    
}