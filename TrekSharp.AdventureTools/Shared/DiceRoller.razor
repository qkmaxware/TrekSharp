<div>
    <div class="lcars">
        <div class="row">
            <div class="hbar elbow-left knee-left" style="width: 32px;"></div>
            <div class="typeface" style="margin-left: 10px; margin-right: 10px;">
                DICE 
            </div>
            <div class="hbar row-fill"></div>
        </div>
    </div>

    <div class="w3-center lcars">
        <div class="secondary elbow-left elbow-right knee-left knee-right">
            <b>Total:</b> @Total + @Effects Effect(s)
        </div>
    </div>
    <div class="w3-padding noselect">
        @foreach (var die in this.dices) {
            <div class="w3-margin" style="display:inline-block; position:relative; width: 64px; height: 64px;" @onclick="@(() => rerollDice(die))">
                <img src="@getDiceImage(die)" style="position: absolute; left: 0; right: 0; top: 0; bottom: 0;">
                <div class="w3-center noselect" style="position: absolute; left: 0; right: 0; top: 0; bottom: 0; line-height: 64px;">
                    @if (die is ChallengeDice cd) {
                        if (cd.ChallengeValue == ChallengeDiceResult.One) {
                            <img src="assets/challenge-1.png"/>
                        } else if (cd.ChallengeValue == ChallengeDiceResult.Two) {
                            <img src="assets/challenge-2.png"/>
                        } else if (cd.ChallengeValue == ChallengeDiceResult.Effect) {
                            <img src="assets/challenge-effect.png"/>
                        } else if (cd.ChallengeValue == ChallengeDiceResult.None) {

                        }
                    } else {
                        <span>@die.NumericValue</span>
                    }
                </div>
            </div>
        }
    </div>
    <div class="w3-padding w3-right-align lcars">
        <button class="w3-small" @onclick="clear">clr</button>
        <button class="w3-small" @onclick="rerollAll">re-roll</button>
    </div>
    <div class="w3-center w3-padding lcars-primary">
        <div style="display:inline-block; position:relative; width: 32px; height: 32px;" @onclick="@(() => AddChallengeDie())">
            <img src="assets/d6.png" style="position: absolute; left: 0; right: 0; width: 32px; height: 32px;">
            <div class="w3-center noselect w3-text-white" style="position: absolute; left: 0; right: 0; top: 0; bottom: 0; line-height: 32px;">
                <img src="assets/challenge-effect.png" width="32" height="32">
            </div>
        </div>
        <div style="display:inline-block; position:relative; width: 32px; height: 32px;" @onclick="@(() => AddD6())">
            <img src="assets/d6.png" style="position: absolute; left: 0; right: 0; width: 32px; height: 32px;">
            <div class="w3-center noselect w3-text-white" style="position: absolute; left: 0; right: 0; top: 0; bottom: 0; line-height: 32px;">
                6
            </div>
        </div>
        <div style="display:inline-block; position:relative; width: 32px; height: 32px;" @onclick="@(() => AddTaskDie())">
            <img src="assets/d20.png" style="position: absolute; left: 0; right: 0; width: 32px; height: 32px;">
            <div class="w3-center noselect w3-text-white" style="position: absolute; left: 0; right: 0; top: 0; bottom: 0; line-height: 32px;">
                20
            </div>
        </div>
    </div>

</div>

@code {

    private List<Dice> dices = new List<Dice>();

    private int Total => dices.Select(dice => dice.NumericValue).Sum();
    private int Effects =>dices.OfType<ChallengeDice>().Where(dice => dice.ChallengeValue == ChallengeDiceResult.Effect).Count();

    private string getDiceImage(Dice dice) {
        return dice switch {
            D20 d20 => "assets/d20.png",
            _ => "assets/d6.png",
        };
    }

    private void clear() {
        dices.Clear();
    }

    private void rerollAll() {
        foreach (var dice in dices) {
            dice.Roll();
        }
        StateHasChanged();
    }

    private void rerollDice(Dice dice) {
        dice.Roll();
        StateHasChanged();
    }

    public void AddChallengeDie() {
        var die = new ChallengeDice();
        dices.Add(die);
        rerollDice(die);
    }

    public void AddD6() {
        var die = new D6();
        dices.Add(die);
        rerollDice(die);
    }

    public void AddTaskDie() {
        var die = new D20();
        dices.Add(die);
        rerollDice(die);
    }

}