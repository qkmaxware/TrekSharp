@using TrekSharp.AdventureTools.Shared.Dice3d;

<div>
    <div class="lcars">
        <div class="row">
            <div class="hbar elbow-left knee-left" style="width: 32px;"></div>
            <div class="typeface" style="margin-left: 10px; margin-right: 10px;">
                DICE 
            </div>
            <div class="hbar row-fill"></div>
        </div>
    </div>

    <div class="w3-row w3-padding lcars-primary lcars-elbow-left lcars-elbow-right w3-margin-left w3-margin-right">
        <div class="w3-col s6 w3-text-white">
            <button class="w3-button w3-display-container" style="padding:4px;" @onclick=AddChallengeDie>
                <img src="assets/d6.png" width=40 height=40 />
                <img class="w3-display-middle" src="assets/challenge-effect.png" width="40" height="40">
            </button>
            <button class="w3-button w3-display-container" style="padding:4px;" @onclick=AddD6>
                <img src="assets/d6.png" width=40 height=40 />
                <div class="w3-display-middle">
                    6
                </div>
            </button>
            <button class="w3-button w3-display-container" style="padding:4px;" @onclick=AddTaskDie>
                <img src="assets/d20.png" width=40 height=40 />
                <div class="w3-display-middle">
                    20
                </div>
            </button>
        </div>
        <div class="w3-col s6 w3-right-align">
            <button class="w3-button w3-round-xxlarge w3-red" @onclick=rerollAll>
                Roll
                <button class="w3-button w3-circle w3-dark-grey" @onclick=clear>
                    &times;
                </button>
            </button>
        </div>
    </div>

    <div class="w3-padding noselect">
        @foreach (var die in this.dices) {
            <div style="padding: 8px; display: inline-block;">
            @if (die is ChallengeDice cd) {
                <DiceChallenge dice=cd></DiceChallenge>
            } else if (die is D6 d6) {
                <DiceD6 dice=d6></DiceD6>
            } else if (die is D20 d20) {
                <DiceD20 dice=d20></DiceD20>
            }
            </div>
        }
    </div>

    <div class="w3-center lcars">
        <div class="secondary elbow-left elbow-right knee-left knee-right">
            <b>Total:</b> @Total + @Effects Effect(s)
        </div>
    </div>

</div>

@code {

    private List<Dice> dices = new List<Dice>();

    private int Total => dices.Select(dice => dice.NumericValue).Sum();
    private int Effects =>dices.OfType<ChallengeDice>().Where(dice => dice.ChallengeValue == ChallengeDiceResult.Effect).Count();

    private string getDiceImage(Dice dice) {
        return dice switch {
            D20 d20 => "assets/d20.png",
            _ => "assets/d6.png",
        };
    }

    private void clear() {
        dices.Clear();
    }

    private void rerollAll() {
        foreach (var dice in dices) {
            dice.Roll();
        }
        StateHasChanged();
    }

    private void rerollDice(Dice dice) {
        dice.Roll();
        StateHasChanged();
    }

    public void AddChallengeDie() {
        var die = new ChallengeDice();
        dices.Add(die);
        rerollDice(die);
    }

    public void AddD6() {
        var die = new D6();
        dices.Add(die);
        rerollDice(die);
    }

    public void AddTaskDie() {
        var die = new D20();
        dices.Add(die);
        rerollDice(die);
    }

}