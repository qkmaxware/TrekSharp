@page "/manage/characters/player/{PlayerId}"
@inherits Page

@if (HasCharacter) {
<PrintNotification/>

<div class="w3-container no-print lcars w3-row" style="text-align: right;">
    <div class="w3-half w3-left-align">
        &nbsp;
        <button @onclick=AddMilestone>+ Milestone</button>
    </div>
    <div class="w3-half w3-right-align">
        <button @onclick="Export">Export Json</button>
        <button @onclick="confirmDelete" class="w3-red">Delete</button>
    </div>
</div>

<div id="character-sheet" class="lcars">
    <div id="player-info" class="container">
        <div class="row">
            <div class="primary" style="width: calc(100% - 290px); max-width: 120px;">
                <img src="assets/starfleet.svg" style="display: block; width: 60%; height: auto; margin-left: auto; margin-right: auto; margin-top: 32px;">
            </div>
            <div class="w3-padding row-fill">
                <h2 class="w3-right-align text-primary typeface">PERSONNEL RECORD</h2>
                <div class="w3-row">
                    <div class="w3-quarter text-secondary typeface">NAME:</div> 
                    <div class="w3-threequarter w3-border-bottom">@Player.Rank @Player.Name</div>
                </div>
                <div class="w3-row">
                    <div class="w3-quarter text-secondary typeface">SPECIES:</div> 
                    <div class="w3-threequarter w3-border-bottom">@Player.Species</div>
                </div>
                <div class="w3-row">
                    <div class="w3-quarter text-secondary typeface">ASSIGNMENT:</div> 
                    <div class="w3-threequarter w3-border-bottom">@Player.Assignment</div>
                </div>
                <div class="w3-row">
                    <div class="w3-half w3-row">
                        <div class="w3-quarter text-secondary typeface">ENVIRONMENT:</div> 
                        <div class="w3-threequarter w3-border-bottom">@Player.Environment</div>
                    </div>
                    <div class="w3-half w3-row">
                        <div class="w3-quarter text-secondary typeface">UPBRINGING:</div> 
                        <div class="w3-threequarter w3-border-bottom">@Player.Upbringing</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="hbar elbow-left" style="width: 56px;"></div>
            <div class="hbar row-fill" style="margin-right: 10px;"></div>
            <div class="hbar" style="width: 240px; max-width: calc(100% - 130px);"></div>
        </div>
    </div>
    <!-- Body -->
    <LCARS PrintBorders=true>
        <div class="w3-row row-fill">
            <SplitLayout>
                <Left>
                    <InjuryDrawer Player="Player"/>
                    <AttributeDrawer Attributes="Player.Attributes"/>
                    <DisciplineDrawer Disciplines="Player.Disciplines"/>
                    <ValueDrawer Values="Player.Values"/>
                    <div class="w3-margin-left">
                        DETERMINATION <input class="no-print" type="number" @bind=Player.Determination/>
                        <span class="print">
                            <input type="checkbox" checked=@(Player.Determination > 0) /> 
                            <input type="checkbox" checked=@(Player.Determination > 1) /> 
                            <input type="checkbox" checked=@(Player.Determination > 2) />
                        </span>
                    </div>
                </Left>
                <Right>
                    <FocusDrawer Focuses="Player.Focuses"/>
                    <EquipmentDrawer Player="Player" AllowEdit=true/>
                </Right>
            </SplitLayout>
        </div>
    </LCARS>
    
    <div class="pagebreak"></div>
    <LCARS PrintBorders=true>
        <!-- Content -->
        <div class="row-fill">
            <div class="w3-row w3-padding">
                <div class="row w3-margin-bottom row-fill">
                    <div class="hbar elbow-left knee-left" style="width: 32px;"></div>
                    <div class="typeface" style="margin-left: 10px; margin-right: 10px;">
                        TALENTS 
                    </div>
                    <div class="hbar row-fill elbow-right knee-right"></div>
                </div>
                <div class="row-fill">
                    <Col3Layout Items=Player.Talents>
                        <Template>
                            <div class="w3-border-bottom">
                                <b>@context.Name</b>
                                <p class="w3-small">@context.Description</p>
                            </div>
                        </Template>
                    </Col3Layout>
                </div>
            </div>
        </div>
    </LCARS>
</div>


} else {
<div class="w3-container">
    <h2>No player "@(PlayerId)"</h2>
</div>
}

<MilestoneEditor @ref=milestones OnSave=@(() => StateHasChanged())></MilestoneEditor>

<ConfirmationDialog @ref="confirm">
</ConfirmationDialog>

@code {

    private ConfirmationDialog confirm;

    [Parameter]
    public string PlayerId { get; set; }
    public int PlayerIndex {
        get {
            int index;
            if (int.TryParse(PlayerId, out index)) {
                return index;
            } else {
                return -1;
            }
        }
    }
    public PlayerCharacter Player => PlayerIndex >=0 && PlayerIndex < Data.Party.Count ? Data.Party[PlayerIndex] : null;
    public bool HasCharacter => Player != null;

    public override string PageTitle => Player?.Name;

    private void confirmDelete() {
        confirm.Open($"Are you sure you want to delete the character '{this.Player.Name}'?", () => Delete());
    }

    public void Delete() {
        if (HasCharacter) {
            Data.Party.Remove(this.Player);
            NavigationManager.NavigateTo("manage/characters");
        }
    }

    public async Task Export() {
        if (HasCharacter) {
            var character = this.Player;
            await this.DownloadJson($"{character.Name}.character", character);
        }
    }

    private MilestoneEditor milestones;

    private void AddMilestone() {
        if (this.HasCharacter)
            milestones.Open(this.Player);
    }

}

        protected override string

        public override string