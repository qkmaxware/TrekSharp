@page "/manage/characters/npc/{EncounterId}/{ListId}/{PlayerId}"
@inherits Page

@if (HasCharacter) {
<PrintNotification/>

<div class="w3-container no-print lcars" style="text-align: right;">
    <button @onclick="confirmDelete" class="w3-red">Delete</button>
</div>

<div id="character-sheet" class="lcars">
    <!-- Header -->
    <div id="player-info" class="container">
        <div class="row">
            <div class="primary" style="width: 120px">
                <img src="assets/starfleet.svg" style="display: block; width: 60%; height: auto; margin-left: auto; margin-right: auto; margin-top: 32px;">
            </div>
            <div class="w3-padding row-fill">
                <h2 class="w3-right-align text-primary typeface">PERSONNEL RECORD</h2>
                <div class="w3-row">
                    <div class="w3-quarter text-secondary typeface">NAME:</div> 
                    <div class="w3-threequarter w3-border-bottom">@Player.Rank @Player.Name</div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="hbar elbow-left" style="width: 56px;"></div>
            <div class="hbar row-fill" style="margin-right: 10px;"></div>
            <div class="hbar" style="width: 240px; max-width: calc(100% - 130px);"></div>
        </div>
    </div>
    <!-- Body -->
    <div id="body" class="container">
        <div class="row">
            <div class="hbar knee-left secondary" style="width: 56px;"></div>
            <div class="hbar row-fill secondary" style="margin-right: 10px;"></div>
            <div class="hbar highlight" style="width: 240px; max-width: 100%;"></div>
        </div>
        <div class="row">
            <div class="secondary" style="width: 120px"></div>
            <!-- Content -->
            <div class="w3-row row-fill">
                <SplitLayout>
                    <Left>
                        <InjuryDrawer Player="Player"/>
                        <AttributeDrawer Attributes="Player.Attributes"/>
                        <DisciplineDrawer Disciplines="Player.Disciplines"/>
                        <EquipmentDrawer Player="Player" AllowEdit=true/>
                    </Left>
                    <Right>
                        <ListDrawer Title="VALUES" List="Player.Values"/>
                        <FocusDrawer Focuses="Player.Focuses"/>
                        <ListDrawer Title="SPECIAL RULES" List="Player.SpecialRules"/>
                    </Right>
                </SplitLayout>
            </div>
        </div>
        <div class="row">
            <div class="hbar elbow-left secondary" style="width: 56px;"></div>
            <div class="hbar row-fill secondary" style="margin-right: 10px;"></div>
            <div class="hbar highlight" style="width: 240px; max-width: 100%;"></div>
        </div>
    </div>
</div>
} else {
    <span>No npc "@(PlayerId)"</span>
}

<ConfirmationDialog @ref="confirm">
</ConfirmationDialog>

@code {

    private ConfirmationDialog confirm;

    [Parameter] public string PlayerId { get; set; }
    [Parameter] public string EncounterId {get; set;}
    [Parameter] public string ListId {get; set;}

    public int PlayerIndex {
        get {
            int index;
            if (int.TryParse(PlayerId, out index)) {
                return index;
            } else {
                return -1;
            }
        }
    }

    private Encounter Encounter {
        get {
            var e = EncounterId;
            var encounter = Data.Encounters.Where(en => en.GUID == e).FirstOrDefault();
            return encounter;
        }
    }
    public NpcCharacter Player {
        get {
            var p = PlayerIndex;
            var encounter = Encounter;
            if (encounter == null) {
                return null;
            }
            if (ListId == "ally") {
                if (p < 0 || p >= encounter.AlliedInfrantry.Count) {
                    return null;
                } else {
                    return encounter.AlliedInfrantry[p];
                }
            } else if (ListId == "enemy") {
                if (p < 0 || p >= encounter.EnemyInfantry.Count) {
                    return null;
                } else {
                    return encounter.EnemyInfantry[p];
                }
            } else {
                return null;
            }
        }
    }
    public bool HasCharacter => Player != null;

    public override string PageTitle => Player?.Name;

    private void confirmDelete() {
        confirm.Open($"Are you sure you want to delete the character '{this.Player.Name}'?", () => Delete());
    }

    public void Delete() {
        if (HasCharacter) {
            if (ListId == "ally") {
                Encounter?.AlliedInfrantry.Remove(this.Player);
            }
            else if (ListId == "enemy") {
                Encounter?.EnemyInfantry.Remove(this.Player);
            }
            NavigationManager.NavigateTo("manage/encounters");
        }
    }

}