@inherits Page
@page "/manage/logs"
@using System.Globalization

<PrintNotification></PrintNotification>

<div class="no-print">
<LCARS Title="LOG ENTRIES">
    @if (compose) {
        <div class="w3-col" style="width: 50px">
            <button class="w3-button w3-blue w3-margin-right w3-margin-bottom" style="border-radius: 0;" @onclick=@(() => compose = false)>&lt;</button>
        </div>
        <Quicklog OnLogRecorded=@(() => { compose = false; StateHasChanged(); })></Quicklog>
    } else {
    <div class="w3-row">
        <div class="w3-half w3-border-right" style="max-height: 50vh; overflow: auto;">
            <input type="text" placeholder="search logs" @bind="filter" style="width: 100%;"/>
            <div class="w3-row">
                <button class="w3-col s6 w3-button @(!flaggedOnly ? "w3-text-blue" : "w3-text-white")" style="background-color: inherit; border-radius: 0; font-size: medium;" @onclick=@(() => flaggedOnly = false)>All</button>
                <button class="w3-col s6 w3-button @(flaggedOnly ? "w3-text-blue" : "w3-text-white")" style="background-color: inherit; border-radius: 0; font-size: medium;" @onclick=@(() => flaggedOnly = true)>Flagged</button>
            </div>
            @{
                string stardate = null;
                foreach (var entry in Data.Logs.Enumerate()) {
                    var capture = entry;
                    if((!flaggedOnly || capture.Flagged) && (string.IsNullOrEmpty(filter) || CultureInfo.InvariantCulture.CompareInfo.IndexOf(capture.Content, filter, CompareOptions.IgnoreCase) >=0 )) {
                        var printed_stardate = capture.Stardate.ToString("0.0#");
                        if (printed_stardate != stardate) {
                            stardate = printed_stardate;
                            <div class="w3-grey w3-padding">
                                <b>@stardate</b>
                            </div>
                        }
                        <div class="w3-margin-left w3-padding w3-display-container">
                            <button class="no-lcars w3-button w3-block w3-left-align" style="background-color:inherit;" @onclick=@(() => viewedEntry = capture)>
                                @capture.ExcerptString()
                            </button>
                            <div class="w3-display-topright">
                                <button class="w3-button no-lcars" style="background-color:transparent;" @onclick=@(() => capture.Flagged = !capture.Flagged)>
                                    @if (capture.Flagged) {
                                        <img src="assets/flag_filled.png" width=12 height=12>
                                    } else {
                                        <img src="assets/flag_empty.png" width=12 height=12>
                                    }
                                </button>
                                <button class="w3-button no-lcars w3-text-red" style="background-color:transparent;" @onclick=confirmDeleteCurrent>
                                    &times;
                                </button>
                            </div>
                        </div>
                    }
                }
            }
        </div>
        <div class="w3-half">
            <div class="w3-right-align primary">
                <button class="no-lcars w3-button" @onclick=@(() => compose = true)>Compose Entry</button>
            </div>
            @if (viewedEntry != null) {
                <div class="w3-padding">
                    <h4 class="w3-right-align">Stardate @viewedEntry.Stardate.ToString("0.0#")</h4>
                    <div style="white-space: pre-line;">
                        @viewedEntry.Content
                    </div>
                </div>
            }
        </div>
    </div>
    }
</LCARS>
</div>
<div class="print">
   @{
    string stardate = null;
    int count = 0;
    foreach (var entry in Data.Logs.Enumerate()) {
        var capture = entry;var printed_stardate = capture.Stardate.ToString("0.0#");
        if (printed_stardate != stardate) {
            count = 1;
            stardate = printed_stardate;
            <h3>Personal Log Stardate @stardate</h3>
        } else {
            count++;
        }
        <div class="w3-margin-left w3-display-container">
            @if (count > 1) {
                <h4>supplemental</h4>
            }
            <div class="w3-padding">
                @capture.Content
            </div>
        </div>
    }
} 
</div>

<ConfirmationDialog @ref="confirm">
</ConfirmationDialog>

@code {
    private bool compose = false;
    private LogEntry viewedEntry = null;
    private string filter = null;
    private bool flaggedOnly = false;

    private ConfirmationDialog confirm;
    private void confirmDeleteCurrent() {
        confirm.Open($"Are you sure you want to delete this log entry?", () => deleteCurrent());
    }

    private void deleteCurrent() {
        if (viewedEntry != null) {
            Data.Logs.Delete(viewedEntry);
            viewedEntry = null;
            StateHasChanged();
        }
    }
}