@page "/new/species"
@inherits AppComponentBase

<LCARS Title="NEW SPECIES">
    <div class="w3-panel typeface">
        This tool will allow you to create custom species which can be used to create supporting and player characters. Fill out all details below and press 'Save' when done.
    </div>
    <div class="row">
        <div class="hbar elbow-left knee-left" style="width: 32px;"></div>
        <span class="spacer typeface text-secondary w3-large">
            DETAILS
        </span>
        <div class="hbar row-fill elbow-right knee-right"></div>
    </div>
    <div class="w3-padding">
        <p>
            Every species needs a name.
        </p>
        <div class="row w3-padding">
            <span class="hbar elbow-left knee-left w3-padding">Name</span>
            <span class="hbar row-fill row" style="margin-left: 10px;">
                <input type="text" class="w3-padding w3-input"  @bind="customSpecies.Name"/>
            </span>
        </div>
        <p>
            What is the name of the planet that this species comes from.
        </p>
        <div class="row w3-padding">
            <span class="hbar elbow-left knee-left w3-padding">Homeworld</span>
            <span class="hbar row-fill row" style="margin-left: 10px;">
                <input type="text" class="w3-padding row-fill"  @bind="customSpecies.Homeworld"/>
                <button @onclick="randomHomeworld" style="width: 120px">Random</button>
            </span>
        </div>
        <p>
            Provide a brief description of this species including their general appearance and demeanor. 
        </p>
        <div class="w3-padding">
            <div class="w3-padding knee-left knee-right elbow-left elbow-right lcars-primary">
                <div>
                    Description
                </div>
                <div>
                    <textarea class="text-primary" @bind=customSpecies.Description style="width: 100%; resize: vertical; background-color: black;"></textarea>
                </div>
            </div>
        </div>
    </div>
    <div class="row w3-margin-bottom">
        <div class="hbar elbow-left knee-left" style="width: 32px;"></div>
        <span class="spacer typeface text-secondary w3-large">
            ATTRIBUTES
        </span>
        <div class="hbar row-fill elbow-right knee-right"></div>
    </div>
    <div class="w3-padding">
        <AttributeIncrement
            Points=3
            MaxPointsPerItem=1
            Mask=Attributes.AllAttributesMask
            Reference=customSpecies.AttributeModifiers
        />
    </div>
    <div class="row w3-margin-bottom">
        <div class="hbar elbow-left knee-left" style="width: 32px;"></div>
        <span class="spacer typeface text-secondary w3-large">
            TALENTS
        </span>
        <div class="hbar row-fill elbow-right knee-right"></div>
    </div>
    <div>   
        <div class="w3-right-align">
            <button @onclick=addTalent>New Talent</button>
        </div>
        <ul class="w3-ul">
            @foreach (var talent in customSpeciesTalents) {
                var this_talent = talent;
                <li>
                    <div>
                        <div class="row w3-padding">
                            <span class="hbar elbow-left knee-left w3-padding">Talent Name</span>
                            <span class="hbar row-fill row" style="margin-left: 10px;">
                                <input type="text" class="w3-padding w3-input" @bind="this_talent.Name"/>
                                <button class="w3-red" @onclick=@(() => deleteTalent(this_talent))>&times;</button>
                            </span>
                        </div>
                        <div class="w3-padding">
                            <div class="w3-padding knee-left knee-right elbow-left elbow-right lcars-primary">
                                <div>
                                    Talent Description
                                </div>
                                <div>
                                    <textarea class="text-primary" @bind=this_talent.Description style="width: 100%; resize: vertical; background-color: black;"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>
    <div class="w3-padding w3-right-align">
        <button class="w3-blue" @onclick=save>Save</button>
    </div>
</LCARS>

@code {
    private CustomSpecies customSpecies = new CustomSpecies();
    private List<SpeciesRestrictedTalent> customSpeciesTalents = new List<SpeciesRestrictedTalent>();

    private void randomHomeworld() {
        var generator = new Generators.PlanetNameGenerator();
        this.customSpecies.Homeworld = generator.Generate(2, 6) + " " + generator.Generate(2, 6) + " " + generator.RandomPlanetNumber();
    }

    private void addTalent() {
        var talent = new SpeciesRestrictedTalent();
        customSpeciesTalents.Add(talent);
    }

    private void deleteTalent(SpeciesRestrictedTalent talent) {
        if (talent != null)
            customSpeciesTalents.Remove(talent);
    }

    private void save() {
        if (customSpecies == null) {
            customSpecies = new CustomSpecies();
            return;
        }

        // Update the talents to be restricted to only this species
        foreach (var talent in customSpeciesTalents) {
            talent.species = customSpecies.Name;
        }

        // Ensure the custom data blocks exists
        if (Data.Custom == null) {
            Data.Custom = new UserCustomData();
        }
        if (Data.Custom.Species == null) {
            Data.Custom.Species = new UserCustomSpecies();
        }
        if (Data.Custom.Species.Definitions == null) {
            Data.Custom.Species.Definitions = new List<CustomSpecies>();
        }
        if (Data.Custom.Species.Talents == null) {
            Data.Custom.Species.Talents = new List<SpeciesRestrictedTalent>();
        }

        // Save the talents and the species to the app data
        Data.Custom.Species.Definitions.Add(customSpecies);
        foreach (var talent in customSpeciesTalents) {
            Data.Custom.Species.Talents.Add(talent);
        }

        // Reset
        customSpecies = new CustomSpecies();
        customSpeciesTalents.Clear();

        // Goto species
        NavigationManager.NavigateTo("manage/custom");
    }
}