name: Deploy
on:
  release: 
    types:
    - released
    branches: 
    - "root"
jobs:
  deploy:
    name: Deploy Github Pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v1 
        with:
          dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel

      - name: Build Site
        env: 
          GITHUB_USERNAME: qkmaxware
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: dotnet publish TrekSharp.AdventureTools/TrekSharp.AdventureTools.csproj -c Release -o .release

      - name: Add .nojekyll file
        run: touch .release/wwwroot/.nojekyll

      - name: Change base-tag
        run: sed -i 's/<base href="\/" \/>/<base href="\/TrekSharp\/" \/>/g' .release/wwwroot/index.html

      - name: Custom 404
        run: cp .release/wwwroot/index.html .release/wwwroot/404.html

      - name: Fix service-worker-assets.js hashes
        working-directory: release/wwwroot
        run: |
          jsFile=$(<service-worker-assets.js)
          # remove JavaScript from contents so it can be interpreted as JSON
          json=$(echo "$jsFile" | sed "s/self.assetsManifest = //g" | sed "s/;//g")
          # grab the assets JSON array
          assets=$(echo "$json" | jq '.assets[]' -c)
          for asset in $assets
          do
            oldHash=$(echo "$asset" | jq '.hash')
            #remove leading and trailing quotes
            oldHash="${oldHash:1:-1}"
            path=$(echo "$asset" | jq '.url')
            #remove leading and trailing quotes
            path="${path:1:-1}"
            newHash="sha256-$(openssl dgst -sha256 -binary $path | openssl base64 -A)"
            
            if [ $oldHash != $newHash ]; then
              # escape slashes for json
              oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
              newHash=$(echo "$newHash" | sed 's;/;\\/;g')
              echo "Updating hash for $path from $oldHash to $newHash"
              # escape slashes second time for sed
              oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
              jsFile=$(echo -n "$jsFile" | sed "s;$oldHash;$newHash;g")
            fi
          done

          echo -n "$jsFile" > service-worker-assets.js

      - name: Commit to Github Pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: .release/wwwroot